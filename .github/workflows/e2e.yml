# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: End-to-end Tests

on:
  push:
    branches:
      - e2e-test
  workflow_run:
    workflows: [Image]
    types:
      - completed
    branches:
      - main
      - release-*

jobs:
  e2e-tests:
    runs-on: linux-amd64-cpu4
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && ${{ github.event.workflow_run.event == 'push' }}
    permissions:
      contents: read
      id-token: write
      checks: write
      statuses: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Calculate build vars
        id: vars
        run: |
          echo "COMMIT_SHORT_SHA=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
          GOLANG_VERSION=$(./hack/golang-version.sh)
          echo "GOLANG_VERSION=${GOLANG_VERSION##GOLANG_VERSION := }" >> $GITHUB_ENV

      - name: Set up Holodeck
        uses: NVIDIA/holodeck@v0.2.17
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_ssh_key: ${{ secrets.AWS_SSH_KEY }}
          holodeck_config: "test/e2e/infra/aws.yml"

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          make ginkgo

      - name: Run e2e tests
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
          E2E_IMAGE_REPO: ghcr.io/nvidia/k8s-nim-operator
          E2E_IMAGE_TAG: main
          LOG_ARTIFACTS: ${{ github.workspace }}/e2e_logs
          NGC_API_KEY: ${{ secrets.NGC_API_KEY }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          ./hack/e2e_tests.sh

      - name: Archive test logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-logs
          path: ./e2e_logs/
          retention-days: 15

     # This makes the result appear on the merged commit's Checks tab
      - name: Report status on merged commit
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'End-to-end Tests',
              head_sha: '${{ github.event.workflow_run.head_sha }}',
              status: 'completed',
              conclusion: '${{ job.status }}' // success | failure | cancelled
            })

      - name: Send Slack alert notification
        id: slack
        if: false
        uses: slackapi/slack-github-action@v2.0.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SUMMARY_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            :x: On repository ${{ github.repository }} the Workflow *${{ github.workflow }}* has failed.
  
            Details: ${{ env.SUMMARY_URL }}
