/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/NVIDIA/k8s-nim-operator/api/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// NemoEntitystoreLister helps list NemoEntitystores.
// All objects returned here must be treated as read-only.
type NemoEntitystoreLister interface {
	// List lists all NemoEntitystores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NemoEntitystore, err error)
	// NemoEntitystores returns an object that can list and get NemoEntitystores.
	NemoEntitystores(namespace string) NemoEntitystoreNamespaceLister
	NemoEntitystoreListerExpansion
}

// nemoEntitystoreLister implements the NemoEntitystoreLister interface.
type nemoEntitystoreLister struct {
	listers.ResourceIndexer[*v1alpha1.NemoEntitystore]
}

// NewNemoEntitystoreLister returns a new NemoEntitystoreLister.
func NewNemoEntitystoreLister(indexer cache.Indexer) NemoEntitystoreLister {
	return &nemoEntitystoreLister{listers.New[*v1alpha1.NemoEntitystore](indexer, v1alpha1.Resource("nemoentitystore"))}
}

// NemoEntitystores returns an object that can list and get NemoEntitystores.
func (s *nemoEntitystoreLister) NemoEntitystores(namespace string) NemoEntitystoreNamespaceLister {
	return nemoEntitystoreNamespaceLister{listers.NewNamespaced[*v1alpha1.NemoEntitystore](s.ResourceIndexer, namespace)}
}

// NemoEntitystoreNamespaceLister helps list and get NemoEntitystores.
// All objects returned here must be treated as read-only.
type NemoEntitystoreNamespaceLister interface {
	// List lists all NemoEntitystores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NemoEntitystore, err error)
	// Get retrieves the NemoEntitystore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NemoEntitystore, error)
	NemoEntitystoreNamespaceListerExpansion
}

// nemoEntitystoreNamespaceLister implements the NemoEntitystoreNamespaceLister
// interface.
type nemoEntitystoreNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.NemoEntitystore]
}
