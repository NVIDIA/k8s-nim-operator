/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/NVIDIA/k8s-nim-operator/api/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// NIMBuildLister helps list NIMBuilds.
// All objects returned here must be treated as read-only.
type NIMBuildLister interface {
	// List lists all NIMBuilds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NIMBuild, err error)
	// NIMBuilds returns an object that can list and get NIMBuilds.
	NIMBuilds(namespace string) NIMBuildNamespaceLister
	NIMBuildListerExpansion
}

// nIMBuildLister implements the NIMBuildLister interface.
type nIMBuildLister struct {
	listers.ResourceIndexer[*v1alpha1.NIMBuild]
}

// NewNIMBuildLister returns a new NIMBuildLister.
func NewNIMBuildLister(indexer cache.Indexer) NIMBuildLister {
	return &nIMBuildLister{listers.New[*v1alpha1.NIMBuild](indexer, v1alpha1.Resource("nimbuild"))}
}

// NIMBuilds returns an object that can list and get NIMBuilds.
func (s *nIMBuildLister) NIMBuilds(namespace string) NIMBuildNamespaceLister {
	return nIMBuildNamespaceLister{listers.NewNamespaced[*v1alpha1.NIMBuild](s.ResourceIndexer, namespace)}
}

// NIMBuildNamespaceLister helps list and get NIMBuilds.
// All objects returned here must be treated as read-only.
type NIMBuildNamespaceLister interface {
	// List lists all NIMBuilds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NIMBuild, err error)
	// Get retrieves the NIMBuild from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NIMBuild, error)
	NIMBuildNamespaceListerExpansion
}

// nIMBuildNamespaceLister implements the NIMBuildNamespaceLister
// interface.
type nIMBuildNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.NIMBuild]
}
