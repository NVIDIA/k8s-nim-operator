/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/NVIDIA/k8s-nim-operator/api/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// NIMCacheLister helps list NIMCaches.
// All objects returned here must be treated as read-only.
type NIMCacheLister interface {
	// List lists all NIMCaches in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NIMCache, err error)
	// NIMCaches returns an object that can list and get NIMCaches.
	NIMCaches(namespace string) NIMCacheNamespaceLister
	NIMCacheListerExpansion
}

// nIMCacheLister implements the NIMCacheLister interface.
type nIMCacheLister struct {
	listers.ResourceIndexer[*v1alpha1.NIMCache]
}

// NewNIMCacheLister returns a new NIMCacheLister.
func NewNIMCacheLister(indexer cache.Indexer) NIMCacheLister {
	return &nIMCacheLister{listers.New[*v1alpha1.NIMCache](indexer, v1alpha1.Resource("nimcache"))}
}

// NIMCaches returns an object that can list and get NIMCaches.
func (s *nIMCacheLister) NIMCaches(namespace string) NIMCacheNamespaceLister {
	return nIMCacheNamespaceLister{listers.NewNamespaced[*v1alpha1.NIMCache](s.ResourceIndexer, namespace)}
}

// NIMCacheNamespaceLister helps list and get NIMCaches.
// All objects returned here must be treated as read-only.
type NIMCacheNamespaceLister interface {
	// List lists all NIMCaches in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.NIMCache, err error)
	// Get retrieves the NIMCache from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.NIMCache, error)
	NIMCacheNamespaceListerExpansion
}

// nIMCacheNamespaceLister implements the NIMCacheNamespaceLister
// interface.
type nIMCacheNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.NIMCache]
}
