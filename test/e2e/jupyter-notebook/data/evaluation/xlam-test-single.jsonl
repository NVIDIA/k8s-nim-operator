{"messages": [{"role": "user", "content": "What is the expiry date of the vehicle with registration number ABC123?"}], "tools": [{"type": "function", "function": {"name": "ean13", "description": "Generates an EAN13 barcode as a PNG or returns an error based on a given 12-13 length code. For a 12-digit code, the check digit is automatically calculated; for a 13-digit code, the check digit is verified.", "parameters": {"type": "object", "properties": {"code": {"description": "A 12 or 13 character string representing the barcode.", "type": "string", "default": "9788804660243"}}}}}, {"type": "function", "function": {"name": "expiry_date_enquiry", "description": "Queries the expiry date of a vehicle's license registration using the given registration number.", "parameters": {"type": "object", "properties": {"rego": {"description": "The vehicle's registration number.", "type": "string", "default": "1HNT923"}}}}}, {"type": "function", "function": {"name": "show_image", "description": "Fetch and return the image data of a flower from the API using the given flower ID.", "parameters": {"type": "object", "properties": {"is_id": {"description": "The identifier for the specific flower.", "type": "string", "default": "6383808bff3dde72b0fc35d6"}}}}}, {"type": "function", "function": {"name": "domain_analysis", "description": "Analyzes a given domain and retrieves various metrics such as domain length, past sales, and number of mentions using the RapidAPI service.", "parameters": {"type": "object", "properties": {"domain": {"description": "The domain name to be analyzed. Defaults to 'dailynews.com'.", "type": "string", "default": "dailynews.com"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "expiry_date_enquiry", "arguments": {"rego": "ABC123"}}}]}
{"messages": [{"role": "user", "content": "What is the potential energy for a charge of 0.5 Coulombs at a voltage of 50 Volts?"}], "tools": [{"type": "function", "function": {"name": "potential_energy", "description": "Calculates the electrostatic potential energy given the charge and voltage.", "parameters": {"type": "object", "properties": {"charge": {"description": "The electric charge.", "type": "number"}, "voltage": {"description": "The electric potential difference (voltage).", "type": "number"}}}}}, {"type": "function", "function": {"name": "calculate_electric_field", "description": "Calculate the electric field produced by a charge at a certain distance.", "parameters": {"type": "object", "properties": {"charge": {"description": "Charge in coulombs producing the electric field.", "type": "integer", "default": 8.854e-12}, "distance": {"description": "Distance from the charge in meters where the field is being measured.", "type": "integer", "default": 8.854e-12}, "permitivity": {"description": "Permitivity of the space where field is being calculated, default is 8.854e-12.", "type": "number"}}}}}, {"type": "function", "function": {"name": "cosine_similarity", "description": "Calculates the cosine similarity between two vectors.", "parameters": {"type": "object", "properties": {"vector_a": {"description": "The first vector.", "type": "array"}, "vector_b": {"description": "The second vector.", "type": "array"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "potential_energy", "arguments": {"charge": 0.5, "voltage": 50}}}]}
{"messages": [{"role": "user", "content": "What is the profit from investing $2000 at a 4% annual rate for 7 years?"}], "tools": [{"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"type": "object", "properties": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "array"}}}}}, {"type": "function", "function": {"name": "is_valid_palindrome", "description": "Checks if a string is a valid palindrome, considering only alphanumeric characters and ignoring case.", "parameters": {"type": "object", "properties": {"s": {"description": "The input string.", "type": "string"}}}}}, {"type": "function", "function": {"name": "investment_profit", "description": "Calculates the profit from an investment based on the initial amount, annual return rate, and time.", "parameters": {"type": "object", "properties": {"amount": {"description": "The initial investment amount.", "type": "number"}, "rate": {"description": "The annual return rate expressed as a decimal.", "type": "number"}, "years": {"description": "The number of years the investment is held.", "type": "integer"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "investment_profit", "arguments": {"amount": 2000, "rate": 0.04, "years": 7}}}]}
{"messages": [{"role": "user", "content": "Retrieve the types available for monthly horoscopes."}], "tools": [{"type": "function", "function": {"name": "get_types", "description": "Fetches available types for a specified period from the horoscopes API.", "parameters": {"type": "object", "properties": {"period": {"description": "The time period for which to retrieve the available types (e.g., daily, weekly, monthly).", "type": "string"}}}}}, {"type": "function", "function": {"name": "playlist_videos", "description": "Fetches videos from a specified YouTube playlist using the RapidAPI service. ", "parameters": {"type": "object", "properties": {"gl": {"description": "The geolocation code (default is 'US').", "type": "string", "default": "US"}, "cursor": {"description": "The cursor token for paginated results (default is None).", "type": "string"}, "hl": {"description": "The language code (default is 'en').", "type": "string", "default": "en"}, "is_id": {"description": "The playlist ID (default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr').", "type": "string", "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "get_types", "arguments": {"period": "monthly"}}}]}
{"messages": [{"role": "user", "content": "Calculate the 25th Fibonacci number."}], "tools": [{"type": "function", "function": {"name": "fibonacci", "description": "Calculates the nth Fibonacci number.", "parameters": {"type": "object", "properties": {"n": {"description": "The position of the Fibonacci number.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "is_anagram", "description": "Checks if two words are anagrams of each other.", "parameters": {"type": "object", "properties": {"word1": {"description": "The first word.", "type": "string"}, "word2": {"description": "The second word.", "type": "string"}}}}}, {"type": "function", "function": {"name": "format_date", "description": "Converts a date string from one format to another.", "parameters": {"type": "object", "properties": {"date": {"description": "The date string to convert.", "type": "string"}, "input_format": {"description": "The format of the input date string.", "type": "string"}, "output_format": {"description": "The desired format of the output date string.", "type": "string"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "fibonacci", "arguments": {"n": 25}}}]}
{"messages": [{"role": "user", "content": "List all languages spoken in France and their flags, translated into French."}], "tools": [{"type": "function", "function": {"name": "zipcode_by_city", "description": "Retrieves the zip code(s) of a given city using the GeoSource API.", "parameters": {"type": "object", "properties": {"city": {"description": "The name of the city for which to retrieve zip code(s). The city must be in the supported countries list (44 countries).", "type": "string", "default": "Brussels"}}}}}, {"type": "function", "function": {"name": "v1_iplookup", "description": "Performs an IP address lookup using the API Ninjas IP Lookup API.", "parameters": {"type": "object", "properties": {"address": {"description": "The IP address to query. Must be in the format A.B.C.D (e.g., 73.9.149.180).", "type": "string", "default": "24.48.0.3"}}}}}, {"type": "function", "function": {"name": "languages", "description": "Fetch a list of the world's languages, optionally filtered and translated.", "parameters": {"type": "object", "properties": {"lang_3": {"description": "Filter by 3-letter ISO language code. Defaults to None.", "type": "string"}, "iso_a2": {"description": "Filter by 2-letter country code. Defaults to None.", "type": "string"}, "fields": {"description": "Select fields to include in the result (e.g., 'iso_a2,lang_3,flag'). Defaults to 'iso_a2,lang_3,flag'.", "type": "string", "default": "iso_a2,lang_3,flag"}, "lang": {"description": "Language code to translate the results into. Defaults to 'en'.", "type": "string", "default": "en"}}}}}, {"type": "function", "function": {"name": "measure_distance_reverse", "description": "Calculates the distance between two addresses in Cameroon using the specified unit of measurement.", "parameters": {"type": "object", "properties": {"stop_address": {"description": "The destination address for which the distance needs to be calculated.", "type": "string", "default": "Bonamoussadi, Douala"}, "start_address": {"description": "The starting address for which the distance needs to be calculated.", "type": "string", "default": "Molyko, Buea"}, "unit": {"description": "The unit of distance measurement. Valid options are 'km' (default), 'mi', 'ft', and 'yd'.", "type": "string", "default": "km"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "languages", "arguments": {"iso_a2": "FR", "fields": "iso_a2,lang_3,flag", "lang": "fr"}}}]}
{"messages": [{"role": "user", "content": "What is the observation from the NeuroNet NLP API for the text 'Microsoft announced its new product launch'?"}], "tools": [{"type": "function", "function": {"name": "main", "description": "Makes a GET request to the NeuroNet NLP API with the given text and returns the observation.", "parameters": {"type": "object", "properties": {"text": {"description": "The input text to be processed by the NeuroNet NLP API.", "type": "string"}}}}}, {"type": "function", "function": {"name": "extract_entities", "description": "Extracts named entities from the provided text using the specified model and RapidAPI key.", "parameters": {"type": "object", "properties": {"text": {"description": "The text from which to extract named entities.", "type": "string", "default": "U.S. stocks rallied Thursday, with the Dow Jones Industrial Average up 2.9% in a tempestuous first half of the year."}, "model": {"description": "The model to use for named entity recognition. Defaults to None.", "type": "string"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "main", "arguments": {"text": "Microsoft announced its new product launch"}}}]}
{"messages": [{"role": "user", "content": "I need to download a PDF manual for my 2015 Toyota Corolla. Can you help me find it?"}], "tools": [{"type": "function", "function": {"name": "search", "description": "Searches the Google Search API using the provided query and parameters.", "parameters": {"type": "object", "properties": {"query": {"description": "The search query. You can utilize advanced Google Search parameters, e.g., 'adele site:youtube.com', 'harry potter filetype:pdf', 'inurl:store', 'ronaldo -cristiano'.", "type": "string", "default": "Nike"}, "limit": {"description": "The maximum number of search results to return. The default is 10. The recommended maximum value is 300.", "type": "integer", "default": "10"}, "related_keywords": {"description": "Whether to include related keywords in the search results. The default is 'true'. Setting this to 'true' can increase API latency.", "type": "string", "default": "true"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "search", "arguments": {"query": "2015 Toyota Corolla manual filetype:pdf", "limit": 10, "related_keywords": "true"}}}]}
{"messages": [{"role": "user", "content": "Search for topics containing the word 'inspiration' in the Quotes Diffusion API."}], "tools": [{"type": "function", "function": {"name": "topic", "description": "Fetches topics from the Quotes Diffusion API with optional pagination and search functionality.", "parameters": {"type": "object", "properties": {"page": {"description": "Page number for pagination. Defaults to None.", "type": "integer"}, "search": {"description": "Custom search term to filter topics. Defaults to None.", "type": "string"}}}}}, {"type": "function", "function": {"name": "info", "description": "Fetch information on the given dataset using the specified RapidAPI key.", "parameters": {"type": "object", "properties": {"dataset": {"description": "The identifier of the dataset to retrieve information for.", "type": "string", "default": "frim1"}}}}}, {"type": "function", "function": {"name": "file_digest", "description": "Calculates the digest/checksum for a given file by making a request to the pragmavantapi via RapidAPI.", "parameters": {"type": "object", "properties": {"source": {"description": "The URL of the file for which the digest/checksum is to be calculated.", "type": "string", "default": "http://google.com"}, "cache_key": {"description": "An optional cache key for quicker lookup. Defaults to None.", "type": "string"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "topic", "arguments": {"search": "inspiration"}}}]}
{"messages": [{"role": "user", "content": "I need to find the postal codes and associated information for the locality 'poum' in New Caledonia."}], "tools": [{"type": "function", "function": {"name": "get_time_zones", "description": "Fetch a list of time zones based on certain search criteria.", "parameters": {"type": "object", "properties": {"is_id": {"description": "The ID of the time zone to filter by. Defaults to None.", "type": "string"}, "keyword": {"description": "The keyword to search for in the time zones. Defaults to 'asia'.", "type": "string", "default": "asia"}, "page": {"description": "The page number for pagination. Defaults to 1.", "type": "integer", "default": "1"}, "perpage": {"description": "The number of records per page for pagination. Defaults to 50.", "type": "integer", "default": "50"}}}}}, {"type": "function", "function": {"name": "v1_iplookup", "description": "Performs an IP address lookup using the API Ninjas IP Lookup API.", "parameters": {"type": "object", "properties": {"address": {"description": "The IP address to query. Must be in the format A.B.C.D (e.g., 73.9.149.180).", "type": "string", "default": "24.48.0.3"}}}}}, {"type": "function", "function": {"name": "zipcodesbyids", "description": "Fetches boundaries of given ZIP Codes in GeoJSON format.", "parameters": {"type": "object", "properties": {"ids": {"description": "Comma-separated list of ZIP Code IDs. Maximum size is 200. Example: '10021,10022,10023'.", "type": "string"}, "properties": {"description": "Comma-separated list of properties to include in the response. Default values are 'zip,centroid,aland,awater'.", "type": "string", "default": "zip,centroid,aland,awater"}}}}}, {"type": "function", "function": {"name": "code_postal_par_code", "description": "Fetches information associated with a given postal code in New Caledonia using the RapidAPI service.", "parameters": {"type": "object", "properties": {"code": {"description": "The postal code for which to retrieve information.", "type": "string", "default": "98827"}}}}}, {"type": "function", "function": {"name": "facilities_lookup", "description": "Fetch a list of facilities in Egypt such as hospitals, banks, colleges, etc., based on provided query parameters for type, governorate, city, and limit.", "parameters": {"type": "object", "properties": {"gov": {"description": "The governorate where the facility is located.", "type": "string", "default": "Cairo"}, "type": {"description": "The type of facility to search for.", "type": "string", "default": "hospital"}, "city": {"description": "The city where the facility is located. Defaults to 'Cairo'.", "type": "string", "default": "Cairo"}, "limit": {"description": "The maximum number of facilities to query. Defaults to '10'.", "type": "string", "default": "10"}}}}}, {"type": "function", "function": {"name": "bp_par_localite", "description": "Fetches postal boxes by locality in New Caledonia using the provided RapidAPI key.", "parameters": {"type": "object", "properties": {"localite": {"description": "The locality for which to fetch postal boxes. Defaults to 'poum'.", "type": "string", "default": "poum"}}}}}, {"type": "function", "function": {"name": "ip_address_lookup", "description": "Retrieves geolocation data for a given IP address using the Toolbench RapidAPI service.", "parameters": {"type": "object", "properties": {"ip": {"description": "The IP address to look up.", "type": "string", "default": "98.207.254.136"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "bp_par_localite", "arguments": {"localite": "poum"}}}]}
{"messages": [{"role": "user", "content": "What will be the accumulated amount after investing $10000 at 4% interest for 10 years?"}], "tools": [{"type": "function", "function": {"name": "neuronal_activity_rate", "description": "Calculates the neuronal activity rate based on the synaptic input rate, synaptic weight, and decay constant.", "parameters": {"type": "object", "properties": {"synaptic_input_rate": {"description": "The rate of synaptic inputs per second.", "type": "integer", "default": 1.0}, "synaptic_weight": {"description": "The weight of the synaptic input, denoting its influence. Defaults to 1.0.", "type": "number", "default": 0.1}, "decay_constant": {"description": "The rate at which the neuron's potential decays. Defaults to 0.1.", "type": "number", "default": 1.0}}}}}, {"type": "function", "function": {"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"type": "object", "properties": {"initial_amount": {"description": "The initial deposit amount.", "type": "integer"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "number"}, "num_years": {"description": "The number of years the money is invested.", "type": "integer"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "calculate_investment_return", "arguments": {"initial_amount": 10000, "interest_rate": 0.04, "num_years": 10}}}]}
{"messages": [{"role": "user", "content": "Check if the string '([]{})' has valid parentheses."}], "tools": [{"type": "function", "function": {"name": "calculate_age", "description": "Calculates the age based on the birthdate.", "parameters": {"type": "object", "properties": {"birthdate": {"description": "The birthdate in the format 'YYYY-MM-DD'.", "type": "string"}}}}}, {"type": "function", "function": {"name": "is_valid_parentheses", "description": "Checks if a string contains valid parentheses.", "parameters": {"type": "object", "properties": {"s": {"description": "The input string.", "type": "string"}}}}}, {"type": "function", "function": {"name": "find_max_subarray_sum", "description": "Finds the maximum sum of a contiguous subarray within a list of integers.", "parameters": {"type": "object", "properties": {"nums": {"description": "The input list of integers.", "type": "array"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "is_valid_parentheses", "arguments": {"s": "([]{})"}}}]}
{"messages": [{"role": "user", "content": "Retrieve stories for the 'STOCK' category with the 'id' value 'AAPL'."}], "tools": [{"type": "function", "function": {"name": "ideas_list", "description": "Fetches a list of ideas/posts with various filtering and sorting options.", "parameters": {"type": "object", "properties": {"locale": {"description": "The language code for the ideas/posts. Default is 'en'.", "type": "string", "default": "en"}, "category": {"description": "Filter by category. Options are 'picked', 'newest', 'popular'.", "type": "string"}, "stock_country": {"description": "The country code for stock-related ideas. Only applicable if the market is 'stock'. Default is 'us'.", "type": "string", "default": "us"}, "page": {"description": "The page index for pagination. Default is 1.", "type": "integer", "default": "1"}, "per_page": {"description": "The number of items per page for pagination. Default is 20.", "type": "integer", "default": "20"}, "market": {"description": "The market type. Options are 'bond', 'futures', 'index', 'forex', 'bitcoin', 'stock'.", "type": "string"}, "symbol": {"description": "Filter ideas/posts related to the specified symbol (e.g., 'NASDAQ:AAPL').", "type": "string"}, "sort": {"description": "Sorting option. Options are 'latest_popular', 'recent', 'picked_time'. Default is 'latest_popular'.", "type": "string", "default": "latest_popular"}}}}}, {"type": "function", "function": {"name": "stories_list", "description": "Retrieves a list of stories related to a specific sticker using the BB Finance API.", "parameters": {"type": "object", "properties": {"template": {"description": "The category of the sticker, which can be one of the following: COMMODITY, CURRENCY, INDEX, INDEXFUTURE, RATE, or STOCK.", "type": "string", "default": "CURRENCY"}, "is_id": {"description": "The value of the 'id' field returned by the /market/auto-complete endpoint.", "type": "string", "default": "usdjpy"}}}}}, {"type": "function", "function": {"name": "tema", "description": "Calculates the Triple Exponential Moving Average (TEMA) for a given financial instrument.", "parameters": {"type": "object", "properties": {"interval": {"description": "Interval between two consecutive points in the time series. Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "string", "default": "1min"}, "symbol": {"description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "string", "default": "AAPL"}, "format": {"description": "Format of the returned data, either `csv` or `json`. Defaults to `json`.", "type": "string", "default": "json"}, "outputsize": {"description": "Number of data points in the result. Default is `30`.", "type": "integer", "default": 30}, "time_period": {"description": "Time period over which the TEMA is calculated. Default is `9`.", "type": "integer", "default": 9}, "series_type": {"description": "Type of price data to analyze. Supports: `open`, `high`, `low`, `close`. Default is `close`.", "type": "string", "default": "close"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "stories_list", "arguments": {"template": "STOCK", "is_id": "AAPL"}}}]}
{"messages": [{"role": "user", "content": "Is the string '((()))' valid in terms of parentheses?"}], "tools": [{"type": "function", "function": {"name": "is_palindrome", "description": "Checks if a string is a palindrome.", "parameters": {"type": "object", "properties": {"text": {"description": "The input string.", "type": "string"}}}}}, {"type": "function", "function": {"name": "calculate_factorial", "description": "Calculates the factorial of a non-negative integer.", "parameters": {"type": "object", "properties": {"n": {"description": "The non-negative integer.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "flatten_list", "description": "Flattens a nested list into a single-level list.", "parameters": {"type": "object", "properties": {"nested_list": {"description": "The nested list to be flattened.", "type": "array"}}}}}, {"type": "function", "function": {"name": "is_subset", "description": "Checks if one set is a subset of another set.", "parameters": {"type": "object", "properties": {"set1": {"description": "The first set.", "type": "array"}, "set2": {"description": "The second set.", "type": "array"}}}}}, {"type": "function", "function": {"name": "is_valid_parentheses", "description": "Checks if a string contains valid parentheses.", "parameters": {"type": "object", "properties": {"s": {"description": "The input string.", "type": "string"}}}}}, {"type": "function", "function": {"name": "merge_dictionaries", "description": "Merges two dictionaries into a single dictionary.", "parameters": {"type": "object", "properties": {"dict1": {"description": "The first dictionary.", "type": "object"}, "dict2": {"description": "The second dictionary.", "type": "object"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "is_valid_parentheses", "arguments": {"s": "((()))"}}}]}
{"messages": [{"role": "user", "content": "What is the geolocation of the IP address 8.8.8.8?"}], "tools": [{"type": "function", "function": {"name": "video", "description": "Perform a video search using the given query string.", "parameters": {"type": "object", "properties": {"query": {"description": "URL encoded query string for the video search.", "type": "string"}}}}}, {"type": "function", "function": {"name": "ip_lookup", "description": "This function performs an IP lookup using the provided IP address and returns the geolocation details. It utilizes the IP Whois Geolocation API from RapidAPI.", "parameters": {"type": "object", "properties": {"ip": {"description": "The IP address (IPv4 or IPv6) to look up.", "type": "string", "default": "1.1.1.1"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "ip_lookup", "arguments": {"ip": "8.8.8.8"}}}]}
{"messages": [{"role": "user", "content": "Please reverse the string 'Python is fun!' for me."}], "tools": [{"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"type": "object", "properties": {"text": {"description": "The input string.", "type": "string"}}}}}, {"type": "function", "function": {"name": "word_frequency", "description": "Calculates the frequency of each word in a text.", "parameters": {"type": "object", "properties": {"text": {"description": "The input text.", "type": "string"}}}}}, {"type": "function", "function": {"name": "is_sum_of_cubes", "description": "Checks if a number is the sum of the cubes of its digits.", "parameters": {"type": "object", "properties": {"num": {"description": "The number to check.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "generate_password", "description": "Generates a random password of specified length and character types.", "parameters": {"type": "object", "properties": {"length": {"description": "The length of the password. Defaults to 12.", "type": "integer", "default": 12}, "include_special": {"description": "Whether to include special characters in the password. Defaults to True.", "type": "boolean", "default": true}}}}}], "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": {"text": "Python is fun!"}}}]}
{"messages": [{"role": "user", "content": "Can you provide the latest coronavirus statistics for California?"}], "tools": [{"type": "function", "function": {"name": "getstats", "description": "Fetches the latest and historical coronavirus statistics data, including confirmed cases, deaths, and recovered cases, for a specified location.", "parameters": {"type": "object", "properties": {"location": {"description": "ISO 3166-2 location code (e.g., \"FR\" for France, \"US\" for the United States, \"US-CA\" for California state, or \"global\" for worldwide statistics).", "type": "string", "default": "US"}}}}}, {"type": "function", "function": {"name": "tirto_search", "description": "Searches Tirto news data using the RapidAPI interface.", "parameters": {"type": "object", "properties": {"limit": {"description": "The maximum number of search results to return.", "type": "string", "default": "10"}, "q": {"description": "The query string to search for in Tirto news articles.", "type": "string", "default": "banjir"}, "page": {"description": "The page number for paginated results.", "type": "string", "default": "1"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "getstats", "arguments": {"location": "US-CA"}}}]}
{"messages": [{"role": "user", "content": "Compute the alimony for a payor earning $12000 per month and a recipient earning $4000 per month for a duration of 7 years."}], "tools": [{"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"type": "object", "properties": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "integer"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "integer"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Calculates the Euclidean distance between two points in n-dimensional space.", "parameters": {"type": "object", "properties": {"point1": {"description": "The coordinates of the first point.", "type": "array"}, "point2": {"description": "The coordinates of the second point.", "type": "array"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "california_alimony", "arguments": {"payor_monthly_income": 12000, "recipient_monthly_income": 4000, "duration_years": 7}}}]}
{"messages": [{"role": "user", "content": "Fetch details of all Embraer airplanes."}], "tools": [{"type": "function", "function": {"name": "airplanes_by_brand", "description": "Fetches all airplanes by a specified brand from the airplanes database.", "parameters": {"type": "object", "properties": {"brand": {"description": "The brand of airplanes to fetch information for.", "type": "string", "default": "Airbus"}}}}}, {"type": "function", "function": {"name": "order_by_ascending", "description": "Fetches a list of all cats sorted in ascending order by a specified attribute.", "parameters": {"type": "object", "properties": {"ordering": {"description": "The attribute by which to order the list of cats, e.g., 'name'.", "type": "string", "default": "breedName"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "airplanes_by_brand", "arguments": {"brand": "Embraer"}}}]}
{"messages": [{"role": "user", "content": "Categorize the job title 'Software Engineer'."}], "tools": [{"type": "function", "function": {"name": "business_delta", "description": "Calculates the number of business days between two given dates using the DaysAPI.", "parameters": {"type": "object", "properties": {"second_date": {"description": "The second date in the range. Defaults to '2021-09-16'.", "type": "string", "default": "2021-09-16"}, "first_date": {"description": "The first date in the range. Defaults to '2021-09-08'.", "type": "string", "default": "2021-09-08"}}}}}, {"type": "function", "function": {"name": "categorize_website", "description": "Fetches and returns the top categories for a given website using the Website Categorization API.", "parameters": {"type": "object", "properties": {"url": {"description": "The URL of the website to be categorized.", "type": "string", "default": "vercel.com"}}}}}, {"type": "function", "function": {"name": "categorize_job_title", "description": "Categorizes a given job title using the Toolbench RapidAPI job title categorization service.", "parameters": {"type": "object", "properties": {"title": {"description": "The job title to be categorized.", "type": "string", "default": "Head of Finance"}}}}}, {"type": "function", "function": {"name": "search", "description": "Queries the Matricula API for information based on a provided license plate and function.", "parameters": {"type": "object", "properties": {"plate": {"description": "License plate to search for. Defaults to '0145LGB'.", "type": "string", "default": "0145LGB"}, "function": {"description": "The operation to perform on the given plate. Defaults to 'getktypeforspain'.", "type": "string", "default": "getktypeforspain"}}}}}, {"type": "function", "function": {"name": "get_all_companies_paginated", "description": "Fetches a paginated list of all companies from the CAC database using the provided API key.", "parameters": {"type": "object", "properties": {"page": {"description": "The page number to fetch.", "type": "integer", "default": "1"}, "limit": {"description": "The number of companies to retrieve per page.", "type": "integer", "default": "10"}}}}}], "tool_calls": [{"type": "function", "function": {"name": "categorize_job_title", "arguments": {"title": "Software Engineer"}}}]}
