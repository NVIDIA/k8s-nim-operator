{"messages": [{"role": "user", "content": "What is the Euclidean distance between the points (1, 2, 3) and (4, 5, 6) in 3-dimensional space?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "calculate_distance", "arguments": {"point1": [1, 2, 3], "point2": [4, 5, 6]}}}]}], "tools": [{"type": "function", "function": {"name": "circle_area", "description": "Computes the area of a circle given its radius.", "parameters": {"type": "object", "properties": {"radius": {"description": "The radius of the circle.", "type": "number"}}}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Calculates the Euclidean distance between two points in n-dimensional space.", "parameters": {"type": "object", "properties": {"point1": {"description": "The coordinates of the first point.", "type": "array"}, "point2": {"description": "The coordinates of the second point.", "type": "array"}}}}}, {"type": "function", "function": {"name": "can_attend_all_meetings", "description": "Determines if a person can attend all meetings given a list of meeting time intervals.", "parameters": {"type": "object", "properties": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "array"}}}}}]}
{"messages": [{"role": "user", "content": "Is the number 16 a power of two?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "is_power_of_two", "arguments": {"num": 16}}}]}], "tools": [{"type": "function", "function": {"name": "note_duration", "description": "Calculates the duration between two musical notes based on their frequencies and the tempo.", "parameters": {"type": "object", "properties": {"freq1": {"description": "The frequency of the first note in Hz.", "type": "integer", "default": 120}, "freq2": {"description": "The frequency of the second note in Hz.", "type": "integer", "default": 120}, "bpm": {"description": "The tempo of the music in beats per minute. Defaults to 120.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"type": "object", "properties": {"numbers": {"description": "The list of numbers to be sorted.", "type": "array"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "boolean"}}}}}, {"type": "function", "function": {"name": "is_power_of_two", "description": "Checks if a number is a power of two.", "parameters": {"type": "object", "properties": {"num": {"description": "The number to check.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"type": "object", "properties": {"a": {"description": "The first non-negative integer.", "type": "integer"}, "b": {"description": "The second non-negative integer.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"type": "object", "properties": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "integer"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "integer"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "integer"}}}}}]}
{"messages": [{"role": "user", "content": "Provide the proxy test details for the request with ID '13579'."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "retrieve_proxy_information", "arguments": {"is_id": "13579"}}}]}], "tools": [{"type": "function", "function": {"name": "retrieve_proxy_information", "description": "Retrieves proxy test result information for a given user request ID.", "parameters": {"type": "object", "properties": {"is_id": {"description": "The user request ID received from the response of sending a proxy for checking.", "type": "string", "default": "6416ab3d3c01efbe45e97675"}}}}}]}
{"messages": [{"role": "user", "content": "Filter a paragraph with a high level of profanity and replace offensive words with a single dash."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "read_text", "arguments": {"check_word": "This paragraph contains offensive language.", "range": "high", "r": "-"}}}]}], "tools": [{"type": "function", "function": {"name": "read_text", "description": "Filters and censors profanity or offensive words from a given text using an external API.", "parameters": {"type": "object", "properties": {"check_word": {"description": "The text to be checked for profanity or offensive words. Maximum length is 700 characters.", "type": "string", "default": "This example text contains no profanity / offensive word."}, "add": {"description": "Comma-separated list of additional words to be added to the profanity list. Case-insensitive and accepts up to 250 characters. Defaults to None.", "type": "string"}, "range": {"description": "The level of filtering range. It can be 'low', 'mid', or 'high'. Defaults to 'low'.", "type": "string"}, "r": {"description": "The replacement string to be used for censored words. Must be a valid punctuation mark and no longer than 1 character. Defaults to '*'.", "type": "string", "default": "*"}}}}}]}
{"messages": [{"role": "user", "content": "Project the population of a city currently at 500,000 people, growing at a rate of 1.5% annually for 10 years."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "project_population", "arguments": {"current_pop": 500000, "num_years": 10, "annual_growth": 1.5}}}]}], "tools": [{"type": "function", "function": {"name": "simulate_query_database", "description": "Simulates querying a database based on certain conditions.", "parameters": {"type": "object", "properties": {"table": {"description": "Name of the table to query.", "type": "string"}, "conditions": {"description": "Conditions for the query, each condition is a dictionary.", "type": "array"}}}}}, {"type": "function", "function": {"name": "project_population", "description": "Projects the population size after a specified number of years.", "parameters": {"type": "object", "properties": {"current_pop": {"description": "The current population size.", "type": "integer", "default": 1.2}, "num_years": {"description": "The number of years into the future to make the projection.", "type": "integer", "default": 1.2}, "annual_growth": {"description": "The annual population growth rate as a percentage. Defaults to 1.2.", "type": "number"}}}}}, {"type": "function", "function": {"name": "calculate_order_total", "description": "Calculates the total cost of an order based on the items, quantities, and prices.", "parameters": {"type": "object", "properties": {"items": {"description": "A list of item names.", "type": "array"}, "quantities": {"description": "A list of corresponding quantities for each item.", "type": "array"}, "prices": {"description": "A list of corresponding prices for each item.", "type": "array"}}}}}, {"type": "function", "function": {"name": "project_investment_growth", "description": "Projects the growth of an investment over a specified number of years.", "parameters": {"type": "object", "properties": {"principal": {"description": "The initial investment amount.", "type": "number", "default": true}, "annual_addition": {"description": "The amount added to the investment annually.", "type": "number", "default": true}, "years": {"description": "The number of years to project the investment growth.", "type": "integer"}, "return_rate": {"description": "The annual return rate as a decimal (e.g., 0.07 for 7%).", "type": "number"}, "inflation": {"description": "A list of annual inflation rates as decimals.", "type": "array"}, "inflation_adjusted": {"description": "Whether to adjust the final value for inflation. Defaults to True.", "type": "boolean"}}}}}, {"type": "function", "function": {"name": "predict_evolution_rate", "description": "Predict the evolutionary rate for a specific species for a given timeframe.", "parameters": {"type": "object", "properties": {"species": {"description": "The species that the evolution rate will be predicted for.", "type": "string", "default": "Darwin"}, "years": {"description": "Number of years for the prediction.", "type": "integer", "default": "Darwin"}, "model": {"description": "The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'.", "type": "string"}}}}}, {"type": "function", "function": {"name": "structural_analysis", "description": "Performs structural analysis on a building based on its ID, floor numbers, and analysis mode.", "parameters": {"type": "object", "properties": {"building_id": {"description": "The unique identifier of the building.", "type": "string", "default": "static"}, "floor_numbers": {"description": "The list of floor numbers to be analyzed.", "type": "array", "default": "static"}, "analysis_mode": {"description": "The mode of analysis, either \"static\" or \"dynamic\". Defaults to \"static\".", "type": "string"}}}}}, {"type": "function", "function": {"name": "get_ip_location", "description": "Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API.", "parameters": {"type": "object", "properties": {"ip": {"description": "The IP address to locate.", "type": "string"}}}}}]}
{"messages": [{"role": "user", "content": "Generate a histogram for the ages of participants in a survey, which are [25, 30, 35, 40, 45, 50, 55, 60] using 4 bins."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "create_histogram", "arguments": {"data": [25, 30, 35, 40, 45, 50, 55, 60], "bins": 4}}}]}], "tools": [{"type": "function", "function": {"name": "binary_addition", "description": "Adds two binary numbers and returns the result as a binary string.", "parameters": {"type": "object", "properties": {"a": {"description": "The first binary number.", "type": "string"}, "b": {"description": "The second binary number.", "type": "string"}}}}}, {"type": "function", "function": {"name": "create_histogram", "description": "Create a histogram based on provided data.", "parameters": {"type": "object", "properties": {"data": {"description": "The data for which histogram needs to be plotted.", "type": "array", "default": 10}, "bins": {"description": "The number of equal-width bins in the range. Default is 10.", "type": "integer", "default": 10}}}}}]}
{"messages": [{"role": "user", "content": "What are the details of the song with ID 'song456' using HTTPS only, wmid 'user789', signature 'abc123', preview at 128 kbps, in English, from the US?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "view_song_copy", "arguments": {"https_only": "true", "wmid": "user789", "songid": "song456", "s": "abc123", "song_preview_kbps": "128", "lang": "en", "country": "US"}}}]}], "tools": [{"type": "function", "function": {"name": "user_followers", "description": "Fetches the follower count for a given Spotify user using the RapidAPI service.", "parameters": {"type": "object", "properties": {"is_id": {"description": "The user ID for which to fetch the follower count.", "type": "string", "default": "nocopyrightsounds"}}}}}, {"type": "function", "function": {"name": "view_song_copy", "description": "Retrieves detailed information about a song using the specified parameters.", "parameters": {"type": "object", "properties": {"https_only": {"description": "Indicates if the request should use HTTPS only.", "type": "string", "default": "1"}, "wmid": {"description": "Identifier for the user or session making the request.", "type": "string", "default": "161445361"}, "songid": {"description": "Identifier for the song whose information is being retrieved.", "type": "string", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, "s": {"description": "Signature or token required for the API call.", "type": "string", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}, "song_preview_kbps": {"description": "Bitrate for the song preview.", "type": "string", "default": "320"}, "lang": {"description": "Desired language for the response.", "type": "string", "default": "id"}, "country": {"description": "Country code where the request is made from.", "type": "string", "default": "id"}}}}}, {"type": "function", "function": {"name": "getallquotes", "description": "Fetch all quotes from the Radio World API with optional pagination and API key.", "parameters": {"type": "object", "properties": {"limit": {"description": "The number of quotes to fetch per page. Defaults to 10.", "type": "integer", "default": "10"}, "page": {"description": "The page number to fetch. Defaults to 1.", "type": "integer", "default": "1"}}}}}, {"type": "function", "function": {"name": "concerts", "description": "Fetches concert information using the Spotify API through RapidAPI, filtered by the specified geographical location.", "parameters": {"type": "object", "properties": {"gl": {"description": "The geographical location filter to apply when fetching concert information.", "type": "string", "default": "US"}}}}}]}
{"messages": [{"role": "user", "content": "I'm planning a trip to Sydney, Australia and I need to know the weather for the next two days. The coordinates are latitude -33.8651\u00b0 S and longitude 151.2099\u00b0 E. Please help with the forecast."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "hourly_forecast_48_hours", "arguments": {"latitude": "-33.8651", "longitude": "151.2099"}}}]}], "tools": [{"type": "function", "function": {"name": "hourly_forecast_48_hours", "description": "Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates.", "parameters": {"type": "object", "properties": {"latitude": {"description": "The latitude coordinate for the forecast location.", "type": "string", "default": "-22.95"}, "longitude": {"description": "The longitude coordinate for the forecast location.", "type": "string", "default": "-43.21"}}}}}]}
{"messages": [{"role": "user", "content": "Check if the IP address 999.999.999.999 is valid."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "is_valid_ip_address", "arguments": {"ip": "999.999.999.999"}}}]}], "tools": [{"type": "function", "function": {"name": "is_valid_ip_address", "description": "Checks if a string is a valid IP address (IPv4).", "parameters": {"type": "object", "properties": {"ip": {"description": "The string to check.", "type": "string"}}}}}, {"type": "function", "function": {"name": "predict_forest_area", "description": "Predicts the change in forest area over a specified number of years.", "parameters": {"type": "object", "properties": {"location": {"description": "The geographic location for the prediction.", "type": "string"}, "num_years": {"description": "The number of years into the future to make the prediction.", "type": "integer"}, "include_humans": {"description": "Whether to include the impact of human activities in the prediction. Defaults to False.", "type": "boolean"}}}}}]}
{"messages": [{"role": "user", "content": "Perform an independent samples t-test on two samples: [1, 2, 3, 4, 5] and [2, 3, 4, 5, 6] with a significance level of 0.05."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "independent_samples_t_test", "arguments": {"sample1": [1, 2, 3, 4, 5], "sample2": [2, 3, 4, 5, 6], "alpha": 0.05}}}]}], "tools": [{"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"type": "object", "properties": {"matrix_a": {"description": "The first matrix.", "type": "array"}, "matrix_b": {"description": "The second matrix.", "type": "array"}}}}}, {"type": "function", "function": {"name": "independent_samples_t_test", "description": "Conducts a two-sample independent t-test and returns the t-statistic, p-value, and conclusion.", "parameters": {"type": "object", "properties": {"sample1": {"description": "The first sample of observations.", "type": "array", "default": 0.05}, "sample2": {"description": "The second sample of observations.", "type": "array", "default": 0.05}, "alpha": {"description": "The significance level of the test. Defaults to 0.05.", "type": "number"}}}}}, {"type": "function", "function": {"name": "expand_around_center", "description": "Helper function to expand around a center for finding palindromic substrings.", "parameters": {"type": "object", "properties": {"s": {"description": "The input string.", "type": "string"}, "left": {"description": "The left index of the center.", "type": "integer"}, "right": {"description": "The right index of the center.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "count_bits", "description": "Counts the number of set bits (1's) in the binary representation of a number.", "parameters": {"type": "object", "properties": {"num": {"description": "The input number.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"type": "object", "properties": {"initial_amount": {"description": "The initial deposit amount.", "type": "integer"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "number"}, "num_years": {"description": "The number of years the money is invested.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "find_pairs_with_sum", "description": "Finds all pairs of integers in a list that sum up to a target value.", "parameters": {"type": "object", "properties": {"nums": {"description": "The list of integers.", "type": "array"}, "target": {"description": "The target sum value.", "type": "integer"}}}}}, {"type": "function", "function": {"name": "probability_of_consecutive_rolls", "description": "Calculates the probability of rolling a specific value on a die consecutively for a given number of rolls.", "parameters": {"type": "object", "properties": {"target_value": {"description": "The desired value to be rolled.", "type": "integer", "default": 6}, "num_rolls": {"description": "The number of consecutive rolls.", "type": "integer", "default": 6}, "num_sides": {"description": "The number of sides on the die. Defaults to 6.", "type": "integer"}}}}}]}
{"messages": [{"role": "user", "content": "Find the second page of search results for the keyword 'environment' on Kompas, with a limit of 20 articles."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "kompas_search", "arguments": {"limit": 20, "page": 2, "command": "environment"}}}]}], "tools": [{"type": "function", "function": {"name": "kompas_search", "description": "Performs a search on the Kompas news API using the provided parameters.", "parameters": {"type": "object", "properties": {"limit": {"description": "The number of search results to retrieve.", "type": "integer", "default": "10"}, "page": {"description": "The page number to retrieve in the paginated results.", "type": "integer", "default": "1"}, "command": {"description": "The search command or keyword.", "type": "string", "default": "banjir"}}}}}, {"type": "function", "function": {"name": "asoy", "description": "Fetches JSON results for All States, One Year (ASOY) for the specified US Presidential Election year.", "parameters": {"type": "object", "properties": {"year": {"description": "The election year to retrieve results for (e.g., 2008).", "type": "integer", "default": "2000"}}}}}]}
{"messages": [{"role": "user", "content": "What were the exchange rates for USD to EUR, GBP on March 15, 2023?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "get_4_date_endpoint", "arguments": {"base": "USD", "symbols": "EUR,GBP", "date": "2023-03-15"}}}]}], "tools": [{"type": "function", "function": {"name": "get_4_date_endpoint", "description": "Fetches the exchange rates for specified currencies on a given date.", "parameters": {"type": "object", "properties": {"base": {"description": "The base currency for which to get the exchange rates.", "type": "string", "default": "eur"}, "symbols": {"description": "A comma-separated string of target currencies to get exchange rates for.", "type": "string", "default": "usd"}, "date": {"description": "The date for which to fetch the exchange rates in 'YYYY-MM-DD' format. Defaults to '2023-02-01'.", "type": "string", "default": "2023-02-01"}}}}}, {"type": "function", "function": {"name": "fetchamatch", "description": "Fetches match details from the specified screening and customer IDs using the provided API credentials.", "parameters": {"type": "object", "properties": {"authorization": {"description": "Authorization token for the API.", "type": "string", "default": "Bearer {{accessTokenUser}}"}, "content_type": {"description": "The content type for the request.", "type": "string", "default": "application/json"}, "customer_a_id": {"description": "The customer ID for whom the match is being fetched.", "type": "string", "default": "customer_a_id"}, "match_1_id": {"description": "The ID of the match to fetch details for.", "type": "string", "default": "match_1_id"}, "screening_a_id": {"description": "The ID of the screening in which the match was found.", "type": "string", "default": "screening_a_id"}}}}}, {"type": "function", "function": {"name": "swift_codes_by_country", "description": "Fetches and returns a list of SWIFT codes for a specified country using the RapidAPI service.", "parameters": {"type": "object", "properties": {"country_code": {"description": "Two-letter ISO country code to get the SWIFT codes for.", "type": "string", "default": "AU"}}}}}]}
{"messages": [{"role": "user", "content": "Get detailed trading idea information for UUID 'abcd1234-efgh-ijkl-mnop-qrstuvwxyz1234' in French."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "ideas_detail", "arguments": {"uuid": "abcd1234-efgh-ijkl-mnop-qrstuvwxyz1234", "lang": "fr"}}}]}], "tools": [{"type": "function", "function": {"name": "ideas_detail", "description": "Fetches detailed information about an ideal post based on the given UUID.", "parameters": {"type": "object", "properties": {"uuid": {"description": "The UUID of the specific post. This value is obtained from the `image_url` field returned in the `/ideas/list` endpoint.", "type": "string", "default": "CRK6Iv51"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "string", "default": "en"}}}}}, {"type": "function", "function": {"name": "getesgnews", "description": "Fetch ESG (Environmental, Social, and Governance) news articles from a specified API. The results include ESG-specific topics such as SASB, UN SDGs, Modern Slavery, and Gender Equality.", "parameters": {"type": "object", "properties": {"content_type": {"description": "The content type for the news search. Defaults to None.", "type": "string"}, "date": {"description": "The date for the news search in DD/MM/YYYY format. Defaults to None.", "type": "string"}, "companyname": {"description": "The name of the company to search for news articles. Defaults to 'Apple Inc.'.", "type": "string", "default": "Apple Inc."}, "sedol": {"description": "The SEDOL (Stock Exchange Daily Official List) number to use for the news search. Defaults to None.", "type": "string"}, "isin": {"description": "The ISIN (International Securities Identification Number) to use for the news search. Defaults to None.", "type": "string"}}}}}, {"type": "function", "function": {"name": "revenue_estimate", "description": "Fetches the revenue estimate for a given stock ticker using the Toolbench RapidAPI.", "parameters": {"type": "object", "properties": {"ticker": {"description": "The stock ticker symbol for which to fetch the revenue estimate.", "type": "string", "default": "AAPL"}}}}}, {"type": "function", "function": {"name": "stock_v2_get_valuation", "description": "Fetches the valuation data for a given stock using its performance ID.", "parameters": {"type": "object", "properties": {"performanceid": {"description": "The value of the performanceId field from endpoints like /auto-complete, /get-summary, or /get-movers. It specifies the stock for which to fetch the valuation data.", "type": "string", "default": "0P0000OQN8"}}}}}]}
{"messages": [{"role": "user", "content": "Roll 2 ten-sided dice."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "custom_dice", "arguments": {"dice": 2, "sides": 10}}}]}], "tools": [{"type": "function", "function": {"name": "custom_dice", "description": "Roll a specified number of dice with a specified number of sides using the RapidAPI Dice Roll Simulator.", "parameters": {"type": "object", "properties": {"dice": {"description": "The number of dice to roll. Defaults to 3.", "type": "integer", "default": "3"}, "sides": {"description": "The number of sides on each die. Defaults to 8.", "type": "integer", "default": "8"}}}}}]}
{"messages": [{"role": "user", "content": "Calculate the age of a person born on 1990-05-15."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "calculate_age", "arguments": {"birthdate": "1990-05-15"}}}]}], "tools": [{"type": "function", "function": {"name": "calculate_age", "description": "Calculates the age based on the birthdate.", "parameters": {"type": "object", "properties": {"birthdate": {"description": "The birthdate in the format 'YYYY-MM-DD'.", "type": "string"}}}}}, {"type": "function", "function": {"name": "calculate_grade", "description": "Calculates the weighted average grade based on scores and their corresponding weights.", "parameters": {"type": "object", "properties": {"scores": {"description": "A list of scores.", "type": "array"}, "weights": {"description": "A list of weights corresponding to each score.", "type": "array"}}}}}, {"type": "function", "function": {"name": "find_max_subarray_sum", "description": "Finds the maximum sum of a contiguous subarray within a list of integers.", "parameters": {"type": "object", "properties": {"nums": {"description": "The input list of integers.", "type": "array"}}}}}, {"type": "function", "function": {"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"type": "object", "properties": {"lst": {"description": "The input list.", "type": "array"}, "chunk_size": {"description": "The size of each chunk.", "type": "integer"}}}}}]}
{"messages": [{"role": "user", "content": "Get a list of all cats sorted in ascending order by their intelligence attribute."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "order_by_ascending", "arguments": {"ordering": "intelligence"}}}]}], "tools": [{"type": "function", "function": {"name": "domain_reputation", "description": "Evaluate the reputation of a given domain using the Toolbench RapidAPI service.", "parameters": {"type": "object", "properties": {"domainname": {"description": "The domain name to be evaluated.", "type": "string", "default": "whoisxmlapi.com"}, "outputformat": {"description": "The response output format. Acceptable values are 'XML' or 'JSON'. Defaults to 'JSON'.", "type": "string"}, "mode": {"description": "The mode for the API check. Acceptable values are 'fast' (some heavy tests and data collectors will be disabled) or 'full' (all data and tests will be processed). Defaults to 'fast'.", "type": "string"}}}}}, {"type": "function", "function": {"name": "order_by_ascending", "description": "Fetches a list of all cats sorted in ascending order by a specified attribute.", "parameters": {"type": "object", "properties": {"ordering": {"description": "The attribute by which to order the list of cats, e.g., 'name'.", "type": "string", "default": "breedName"}}}}}, {"type": "function", "function": {"name": "single_cat_breed", "description": "Fetches details of a single cat breed using the provided breed ID from the Cat Breed Database API.", "parameters": {"type": "object", "properties": {"is_id": {"description": "The ID of the cat breed to fetch details for.", "type": "integer", "default": "34"}}}}}, {"type": "function", "function": {"name": "mouldinformation", "description": "Retrieves mould information for a given tenant ID using the specified RapidAPI key.", "parameters": {"type": "object", "properties": {"tenantid": {"description": "The ID of the tenant for which mould information is to be retrieved.", "type": "string", "default": "TNTgielleplast"}}}}}]}
{"messages": [{"role": "user", "content": "What are the restaurants in the local authority of Sheffield?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "search_restaurants_by_local_authority", "arguments": {"localauthority": "Sheffield"}}}]}], "tools": [{"type": "function", "function": {"name": "search_restaurants_by_local_authority", "description": "Fetches all restaurants within a specified local authority using the Wyre Data API.", "parameters": {"type": "object", "properties": {"localauthority": {"description": "The name of the local authority to search for restaurants in.", "type": "string", "default": "wyre"}}}}}]}
{"messages": [{"role": "user", "content": "Get expressions that contain 'justice' limited to 10 results."}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "get_expressions", "arguments": {"mot": "justice", "limite": "10"}}}]}], "tools": [{"type": "function", "function": {"name": "get_expressions", "description": "Fetch expressions that include a specified word from the Dicolink API.", "parameters": {"type": "object", "properties": {"mot": {"description": "The word for which to retrieve expressions.", "type": "string", "default": "cheval"}, "limite": {"description": "The maximum number of expressions to retrieve. Defaults to '10'.", "type": "string", "default": "10"}}}}}, {"type": "function", "function": {"name": "get_transaction_v2", "description": "Fetches normalized transaction data from a specified blockchain using the provided transaction ID and API key.", "parameters": {"type": "object", "properties": {"blockchain": {"description": "The name of the blockchain to query.", "type": "string", "default": "bitcoin"}, "txid": {"description": "The transaction ID for the desired transaction.", "type": "string", "default": "cd8ec77174e426070d0a50779232bba7312b712e2c6843d82d963d7076c61366"}}}}}]}
{"messages": [{"role": "user", "content": "Can you predict the y-value for x=3.5 based on a dataset where x=[1,2,3] and y=[2,4,6]?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "linear_regression_prediction", "arguments": {"x_values": [1, 2, 3], "y_values": [2, 4, 6], "target_x": 3.5}}}]}], "tools": [{"type": "function", "function": {"name": "linear_regression_prediction", "description": "Predicts the y-value for a given x-value using linear regression.", "parameters": {"type": "object", "properties": {"x_values": {"description": "The x-coordinates of the data points.", "type": "array"}, "y_values": {"description": "The y-coordinates of the data points.", "type": "array"}, "target_x": {"description": "The x-value for which to predict the y-value.", "type": "number"}}}}}, {"type": "function", "function": {"name": "chi_square_independence_test", "description": "Performs a Chi-Square test for independence on a 2x2 contingency table.", "parameters": {"type": "object", "properties": {"contingency_table": {"description": "A 2x2 contingency table represented as a list of lists.", "type": "array", "default": 0.05}, "significance_level": {"description": "The significance level for the Chi-Square test. Defaults to 0.05.", "type": "number", "default": 0.05}}}}}, {"type": "function", "function": {"name": "prime_factorization", "description": "Computes the prime factorization of a positive integer.", "parameters": {"type": "object", "properties": {"number": {"description": "The positive integer to factorize.", "type": "integer"}}}}}]}
{"messages": [{"role": "user", "content": "Can a person attend all of these meetings: 9:00am-10:00am, 9:30am-10:30am, 10:00am-11:00am?"}, {"role": "assistant", "content": "", "tool_calls": [{"type": "function", "function": {"name": "can_attend_all_meetings", "arguments": {"intervals": [[9, 10], [9.5, 10.5], [10, 11]]}}}]}], "tools": [{"type": "function", "function": {"name": "can_attend_all_meetings", "description": "Determines if a person can attend all meetings given a list of meeting time intervals.", "parameters": {"type": "object", "properties": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "array"}}}}}]}
